name: Build and Push Daemon

on:
  push:
    branches:
      - "main"
      - "deploy/dev"
  pull_request:
    branches:
      - "main"
  release:
    types: [published]

concurrency:
  group: build-push-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  CICD_ACTOR: ${{ secrets.CICD_ACTOR }}
  CICD_TOKEN: ${{ secrets.CICD_TOKEN }}
  DIFY_DAEMON_IMAGE_NAME: ${{ github.repository }}

jobs:
  matrix_prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set matrix
        id: set-matrix
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            # Skip arm64 builds on PR
            echo "matrix={\"include\":[{\"service_name\":\"build-serverless-daemon-amd64\",\"image_name_env\":\"DIFY_DAEMON_IMAGE_NAME\",\"platform\":\"linux/amd64\",\"scope\":\"serverless\"},{\"service_name\":\"build-local-daemon-amd64\",\"image_name_env\":\"DIFY_DAEMON_IMAGE_NAME\",\"platform\":\"linux/amd64\",\"scope\":\"local\"}]}" >> $GITHUB_OUTPUT
          else
            # Include all builds for other events
            echo "matrix={\"include\":[{\"service_name\":\"build-serverless-daemon-amd64\",\"image_name_env\":\"DIFY_DAEMON_IMAGE_NAME\",\"platform\":\"linux/amd64\",\"scope\":\"serverless\"},{\"service_name\":\"build-serverless-daemon-arm64\",\"image_name_env\":\"DIFY_DAEMON_IMAGE_NAME\",\"platform\":\"linux/arm64\",\"scope\":\"serverless\"},{\"service_name\":\"build-local-daemon-amd64\",\"image_name_env\":\"DIFY_DAEMON_IMAGE_NAME\",\"platform\":\"linux/amd64\",\"scope\":\"local\"},{\"service_name\":\"build-local-daemon-arm64\",\"image_name_env\":\"DIFY_DAEMON_IMAGE_NAME\",\"platform\":\"linux/arm64\",\"scope\":\"local\"}]}" >> $GITHUB_OUTPUT
          fi

  build:
    needs: matrix_prepare
    runs-on: ${{ matrix.platform == 'linux/arm64' || 'ubuntu-latest' }}
    if: github.repository == 'Aggregain/dify-plugin-daemon'
    strategy:
      matrix: ${{ fromJson(needs.matrix_prepare.outputs.matrix) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.CICD_ACTOR }}
          password: ${{ env.CICD_TOKEN }}
            
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set short sha
        uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 7


      - name: Run Build Docker Image
        run: docker build --build-arg PLATFORM=${{ matrix.scope }} --build-arg VERSION=${{ github.sha }} -t ${{ github.repository }}-${{steps.short-sha.outputs.sha}} -f ./docker/${{ matrix.scope }}.dockerfile .

      - name: Push Docker Image
        if: github.event_name != 'pull_request'
        run: for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n');
          do
          docker push ghcr.io/aggregain/dify-plugin-daemon-${{ env.PLATFORM_PAIR }};
          done
